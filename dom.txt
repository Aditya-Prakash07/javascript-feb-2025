
// DOM (Document Object Model) Concepts

// 1. What is the DOM?
// The DOM is a programming interface for web documents. It represents the page so that programs can change the document structure, style, and content. The DOM represents the document as nodes and objects. That way, programming languages can interact with the page.

// 2. Nodes and Elements
// The DOM is a tree-like structure made up of nodes. Nodes can be elements, text, or comments. Elements are a type of node that represent HTML tags.

// 3. Selecting Elements
// Methods to select elements include:
// - document.getElementById(id): Selects an element by its ID.
// - document.getElementsByClassName(className): Selects elements by their class name.
// - document.getElementsByTagName(tagName): Selects elements by their tag name.
// - document.querySelector(selector): Selects the first element that matches a CSS selector.
// - document.querySelectorAll(selector): Selects all elements that match a CSS selector.

// 4. Manipulating Elements
// Methods to manipulate elements include:
// - element.innerHTML: Gets or sets the HTML content of an element.
// - element.textContent: Gets or sets the text content of an element.
// - element.setAttribute(name, value): Sets an attribute on an element.
// - element.getAttribute(name): Gets the value of an attribute on an element.
// - element.classList.add(className): Adds a class to an element.
// - element.classList.remove(className): Removes a class from an element.
// - element.classList.toggle(className): Toggles a class on an element.

// 5. Creating and Removing Elements
// Methods to create and remove elements include:
// - document.createElement(tagName): Creates a new element.
// - element.appendChild(child): Appends a child element to a parent element.
// - element.removeChild(child): Removes a child element from a parent element.
// - element.replaceChild(newChild, oldChild): Replaces a child element with a new element.

// 6. Event Handling
// Methods to handle events include:
// - element.addEventListener(event, handler): Adds an event listener to an element.
// - element.removeEventListener(event, handler): Removes an event listener from an element.
// - Common events include 'click', 'mouseover', 'mouseout', 'keydown', 'keyup', 'load', and 'submit'.

// 7. Traversing the DOM
// Methods to traverse the DOM include:
// - element.parentNode: Gets the parent node of an element.
// - element.childNodes: Gets the child nodes of an element.
// - element.firstChild: Gets the first child node of an element.
// - element.lastChild: Gets the last child node of an element.
// - element.nextSibling: Gets the next sibling of an element.
// - element.previousSibling: Gets the previous sibling of an element.

// 8. Styling Elements
// Methods to style elements include:
// - element.style.property: Sets a CSS property on an element.
// - element.className: Gets or sets the class name of an element.

// 9. Form Handling
// Methods to handle forms include:
// - formElement.submit(): Submits a form.
// - formElement.reset(): Resets a form.
// - inputElement.value: Gets or sets the value of an input element.

// 10. Browser Object Model (BOM)
// The BOM represents the browser window and includes objects like window, navigator, screen, history, and location.
